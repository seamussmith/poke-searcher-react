{"version":3,"sources":["assets/logo.svg","components/searchBox/index.tsx","components/util/util.tsx","components/searchResult/index.tsx","components/copyClicker/index.tsx","components/resultDetailed/pokemonContext.tsx","components/resultDetailed/components/styleComponents/ability.tsx","components/resultDetailed/components/styleComponents/divs.tsx","components/resultDetailed/components/styleComponents/flair.tsx","components/resultDetailed/components/styleComponents/gender.tsx","components/resultDetailed/components/styleComponents/infoStat.tsx","components/resultDetailed/components/styleComponents/label.tsx","components/resultDetailed/components/styleComponents/evolutions.tsx","components/resultDetailed/components/styleComponents/stat.tsx","components/resultDetailed/components/styleComponents/type.tsx","components/resultDetailed/components/styleComponents/pokedexDesc.tsx","components/resultDetailed/components/styleComponents/moves.tsx","components/resultDetailed/components/components/ability.tsx","components/loadingSpinner/index.tsx","components/util/PokeAPICache.ts","components/resultDetailed/components/components/evolutions.tsx","components/resultDetailed/components/components/gender.tsx","components/resultDetailed/components/components/infoStat.tsx","components/resultDetailed/components/components/stat.tsx","components/resultDetailed/components/components/typeLabel.tsx","components/resultDetailed/components/components/moves.tsx","components/resultDetailed/resultDetailed.tsx","components/resultDetailed/index.tsx","App.tsx","reportWebVitals.ts","components/navbar/index.tsx","components/footer/index.tsx","index.tsx"],"names":["SearchBox","props","useState","value","setValue","className","to","src","logo","alt","type","placeholder","spellCheck","onChange","event","keyUp","currentTarget","capitalize","s","charAt","toUpperCase","slice","stylePokemonName","str","splitStr","genderSymbol","split","map","e","length","match","join","Type","children","SearchResult","pokeData","pokemon","id","name","disabled","style","backgroundImage","sprites","front_default","types","INITAL_TXT","CopyClicker","hoverTxt","setHoverTxt","timeoutid","useRef","onClick","window","clearTimeout","current","copy","copyTxt","setTimeout","React","createContext","AbilityContainer","styled","div","AbilityDiv","AbilityName","AbilityDesc","ResultDetailedGrid","Division","width","height","EvenDivision","StatDiv","BaseFlair","p","GigantamaxFlair","EternamaxFlair","LegendaryFlair","MythicalFlair","AlternativeFormFlair","MegaEvolutionFlair","GenderColors","GenderLabel","gender","InfoStatParent","InfoStatIcon","Label","css","Label1","span","h1","Label2","h2","NameLabel","h3","EvolutionsGrid","StatColors","StatCmp","StatBarContainer","StatBar","stat","outOf","StatName","EmptyType","PokedexDesc","MovesGrid","Move","Ability","abilityData","ability","effect_entries","filter","language","replace","short_effect","LoadingSpinner","display","visible","APICache","PokeList","indexListFetchJob","a","fetch","then","blob","json","API_ENDPOINT","getPkmnByURL","query","endpoint","param","MatchQuery","limit","results","i","Evolutions","pokemonList","setPokemonList","useContext","PokemonContext","species","useEffect","evolution_chain","url","result","unwrapChain","pokemons","sort","b","Number","is_default","pkmn","evoChain","chain","urls","evoStack","push","item","pop","evolves_to","Promise","all","speciesEntries","pokemonPromise","entry","varieties","v","flat","Gender","genderMap","ratio","InfoStat","icoName","Stat","TypeLabel","typeName","padding","margin","Moves","moves","setMoves","pokemonContext","version_group_details","reverse","move_learn_method","move","details","find","latest","parseInt","version_group","lv","level_learned_at","power","accuracy","textAlign","replaceAll","effect_chance","PkmnFlairs","looseSpecies","splitName","flairs","couldBeAlternate","is_legendary","is_mythical","some","Abilities","abilities","setAbilities","ResultDetailed","setPokemon","setSpecies","history","useHistory","params","useParams","ready","setReady","self","scrollIntoView","test","getPkmnByEndpoint","spec","catch","_","type0","type1","eggGroupText","egg_groups","latestFlavorText","flavor_text_entries","flavor_text","genderRatio","gender_rate","femaleRatio","maleRatio","ref","Provider","other","stats","base_stat","reduce","n","c","weight","habitat","location","href","RealApp","queryIndex","searchResults","setSearchResults","loading","setLoading","document","body","classList","add","thisQueryIndex","toLowerCase","forEach","path","exact","WackyRedirect","setId","foundResult","undefined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","nav","NavbarLink","NavbarUList","ul","NavbarListItem","li","MiniNavbar","Footer","ReactDOM","render","StrictMode","getElementById","main"],"mappings":"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","file":"static/js/main.ed9479f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ae268293.svg\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from \"../../assets/logo.svg\"\r\nimport './index.css'\r\n\r\nfunction SearchBox(props: {\r\n    keyUp: (query: string) => void\r\n})\r\n{\r\n    const [value, setValue] = useState(\"\")\r\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        props.keyUp(event.currentTarget.value)\r\n        setValue(event.currentTarget.value)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"search-box\">\r\n            <Link to=\"/\" className=\"search-box__link\">\r\n                <img src={logo} alt=\"pokesearcher logo\" className=\"search-box__logo\"></img>\r\n            </Link>\r\n            <div className=\"search-box__input-wrapper\">\r\n                <div className=\"search-box__search-icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </div>\r\n                <input\r\n                type=\"text\"\r\n                className=\"search-box__input\"\r\n                placeholder=\"Search for a Pokemon!\"\r\n                spellCheck={false}\r\n                value={value}\r\n                onChange={onChange}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react'\r\n\r\nexport function capitalize(s: string): string\r\n{\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\nexport function stylePokemonName(str: string): JSX.Element\r\n{\r\n    let splitStr: any[]\r\n    if (str !== \"ho-oh\") // WHY IS THERE A POKEMON WITH A HYPHEN IN THEIR NAME?? WHY IS HO-OH THE ONLY ONE????\r\n        splitStr = str.split(\"-\").map(e => capitalize(e))\r\n    else\r\n        return <>{capitalize(str)}</> // Ho-oh does not have male/female variants. Right? RIGHT???\r\n    let genderSymbol = null\r\n    if (splitStr[splitStr.length-1].match(/M$|Male$/))\r\n    {\r\n        delete splitStr[splitStr.length-1]\r\n        genderSymbol = <i className=\"fas fa-mars --force-inheritence\"></i>\r\n    }\r\n    else if (splitStr[splitStr.length-1].match(/F$|Female$/))\r\n    {\r\n        delete splitStr[splitStr.length-1]\r\n        genderSymbol = <i className=\"fas fa-venus --force-inheritence\"></i>\r\n    }\r\n    return (\r\n        <>{splitStr.join(\" \")} {genderSymbol}</>\r\n    )\r\n}\r\n\r\nexport function formatPokemonName(str: string): string\r\n{\r\n    if (str !== \"ho-oh\") // WHY IS THERE A POKEMON WITH A HYPHEN IN THEIR NAME?? WHY IS HO-OH THE ONLY ONE????\r\n        return str.split(\"-\").map(e => capitalize(e)).join(\" \")\r\n    else\r\n        return capitalize(str)\r\n}\r\n\r\nexport function escapeRegExp(str: string): string\r\n{\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nexport function isStringPositiveInteger(str: string)\r\n{\r\n    return /\\d+$/.test(str)\r\n}\r\n","import React from 'react'\r\nimport {capitalize, stylePokemonName} from '../util/util'\r\nimport './index.css'\r\nimport '../typeColorClasses/typeColorClasses.css'\r\nimport { IPokemon, IPokemonSpecies } from 'pokeapi-typescript'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction SearchResult(props: {\r\n    pokemon: IPokemon\r\n    species?: IPokemonSpecies\r\n    disabled?: boolean\r\n})\r\n{\r\n    const pokeData = props.pokemon\r\n    return (\r\n        <Link to={`/${props.pokemon.id}/${props.pokemon.name}/`} className={`${props.disabled ? \"search-result--disabled\":\"\"} search-result`}\r\n        style={{\r\n            backgroundImage: `url(${props.pokemon.sprites.front_default})`\r\n        }}>\r\n            <div className=\"search-result__img-container\">\r\n                <img\r\n                className=\"search-result__image nofilter\"\r\n                src={pokeData.sprites.front_default}\r\n                alt={`${pokeData.name} sprite`}/>\r\n            </div>\r\n\r\n            <div className=\"search-result__info-container\">\r\n                <div className='search-result__name-container'>\r\n                    <h2 className={`search-result__name ${pokeData.types[0].type.name}`}>{stylePokemonName(pokeData.name)}</h2>\r\n                </div>\r\n                \r\n                <p className='search-result__type-container'>\r\n                    <Type type={pokeData.types[0].type.name} key={pokeData.types[0].type.name}>{capitalize(pokeData.types[0].type.name)} </Type>\r\n                    <Type type={pokeData.types[1]?.type.name} key={pokeData.types[1]?.type.name}>{capitalize(pokeData.types[1]?.type.name ?? \"???\")} </Type>\r\n                </p>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nfunction Type(props: {\r\n    type: string | null\r\n    children: React.ReactNode\r\n})\r\n{\r\n    return (\r\n        <span className={`search-result__type ${props.type ?? \"search-result__type--none\"}`}>\r\n            <span>{props.children}</span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default SearchResult\r\n","import React, { useState, useRef } from 'react'\r\nimport copy from 'copy-to-clipboard'\r\nimport './index.css'\r\nimport '../tooltip/tooltip.css'\r\n\r\nconst INITAL_TXT = \"Click to copy!\"\r\nconst CLICKED_TXT = \"Copied!\"\r\nfunction CopyClicker(props: {\r\n    copyTxt: string\r\n})\r\n{\r\n    const [hoverTxt, setHoverTxt] = useState(INITAL_TXT)\r\n    const timeoutid = useRef(-1)\r\n    const onClick = () => {\r\n        window.clearTimeout(timeoutid.current)\r\n        setHoverTxt(CLICKED_TXT)\r\n        copy(props.copyTxt)\r\n        timeoutid.current =\r\n            window.setTimeout(() => {\r\n                setHoverTxt(INITAL_TXT)\r\n            }, 500)\r\n    }\r\n    return (\r\n        <span\r\n        className=\"copy-clicker tooltip\"\r\n        data-hover-txt={hoverTxt}\r\n        onClick={onClick}>\r\n            {props.copyTxt}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default CopyClicker\r\n","import React from 'react'\r\nimport { IPokemon, IPokemonSpecies } from \"pokeapi-typescript\"\r\n\r\ninterface IPokemonProviderData\r\n{\r\n    pokemon: IPokemon\r\n    species: IPokemonSpecies\r\n}\r\nexport default React.createContext<IPokemonProviderData>({} as IPokemonProviderData) // not an accident waiting to happen ;)\r\n","import styled from \"styled-components\"\r\n\r\n// Abilities\r\n\r\nexport const AbilityContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: 5px;\r\n    margin: 5px;\r\n`\r\n\r\nexport const AbilityDiv = styled.div`\r\n    text-align: center;\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    width: 100%;\r\n    height: 10em;\r\n    background-color: var(--layer-3);\r\n    border-radius: 10px;\r\n    box-shadow: 2px 2px 0 var(--shadow-color);\r\n`\r\n\r\nexport const AbilityName = styled.div`\r\n    text-align: left;\r\n    background-color: var(--layer-1);\r\n    border-radius: 10px 10px 0 0;\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n`\r\n\r\nexport const AbilityDesc = styled.div`\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\n// Division Styling\r\n\r\nexport const ResultDetailedGrid = styled.div`\r\n    text-align: center;\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 1fr); \r\n\r\n    gap: 10px;\r\n\r\n    --pokemon-color: none;\r\n    width: 60vw;\r\n    transform-origin: top;\r\n    border-color: var(--pokemon-color);\r\n    background-color: var(--layer-1);\r\n    border-radius: var(--division-radius);\r\n    box-shadow: 1px 2px 2px 1px var(--shadow-color);\r\n    padding: 10px;\r\n    margin: 1% 0;\r\n    @media (max-width: 1280px) {\r\n        width: 80vw;\r\n    }\r\n    @media (max-width: 1024px) {\r\n        width: 100vw;\r\n    }\r\n`\r\n\r\nexport const Division = styled.div<{\r\n    width?: number\r\n    height?: number\r\n}>`\r\n    grid-column: span ${({width}) => (width ?? 8)} / auto;\r\n    grid-row: span ${({height}) => (height ?? 1)} / auto;\r\n    padding: 5px;\r\n    background-color: var(--layer-2);\r\n    border-radius: var(--division-radius);\r\n    box-shadow: 1px 2px 0px 0px var(--shadow-color);\r\n    @media (max-width: 800px) {\r\n        grid-column: span 8 / auto;\r\n        grid-row: span 8 / auto;\r\n    }\r\n`\r\n\r\nexport const EvenDivision = styled(Division)`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    padding: 10px;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const StatDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    padding: 10px;\r\n    * {\r\n        width: 100%;\r\n    }\r\n`\r\n","import styled from \"styled-components\";\r\n\r\n// Flair\r\n\r\nconst BaseFlair = styled.p`\r\n    --flair-color: gray;\r\n    --flair-shadow: darkgray;\r\n    color: var(--text-color);\r\n    text-shadow: 1px 1px black;\r\n    background-color: var(--flair-color);\r\n    box-shadow: 2px 2px var(--flair-shadow);\r\n    font-size: 20pt;\r\n    font-weight: bold;\r\n    margin: 10px 10%;\r\n    @media (max-width: 720px) {\r\n        margin: 10px 2%;\r\n    }\r\n    border-radius: 100px;\r\n    padding: 2px 2px;\r\n    display: block;\r\n`\r\n\r\nexport const GigantamaxFlair = styled(BaseFlair)`\r\n    --flair-color: #ce3030;\r\n    --flair-shadow: #ff2626;\r\n\r\n    position: relative;\r\n    z-index: 0;\r\n    background-color: var(--flair-color);\r\n    /* Glow effect */\r\n    box-shadow: 0 0 10px var(--flair-shadow);\r\n    \r\n    /* Emulate solid box shadow since I am using it to do the glow effect */\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n\r\n        opacity: 35%;\r\n        border-radius: 100px;\r\n        background-color: var(--flair-color);\r\n        /* Glowwwing */\r\n        box-shadow: 0 0 10px var(--flair-shadow);\r\n\r\n        z-index: -1;\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`\r\n\r\nexport const EternamaxFlair = styled(BaseFlair)`\r\n    --flair-color: #412e85;\r\n    --flair-shadow: rgb(256, 46, 133);\r\n    \r\n    position: relative;\r\n    z-index: 0;\r\n    background-color: var(--flair-color);\r\n    /* Glow effect */\r\n    box-shadow: 0 0 10px var(--flair-shadow);\r\n    \r\n    /* Emulate solid box shadow since I am using it to do the glow effect */\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n\r\n        opacity: 25%;\r\n        border-radius: 100px;\r\n        background-color: var(--flair-color);\r\n        /* Glowwwing */\r\n        /* box-shadow: 0 0 15px var(--flair-shadow); */\r\n\r\n        z-index: -1;\r\n        top: 3px;\r\n        left: 3px;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`\r\n\r\nexport const LegendaryFlair = styled(BaseFlair)`\r\n    --flair-color: #22a534;\r\n    --flair-shadow: #1b7727;\r\n`\r\n\r\nexport const MythicalFlair = styled(BaseFlair)`\r\n    --flair-color: #a52a95;\r\n    --flair-shadow: #5c1252;\r\n`\r\n\r\nexport const AlternativeFormFlair = styled(BaseFlair)`\r\n    --flair-color: #cc7829;\r\n    --flair-shadow: #79481a;\r\n`\r\n\r\nexport const MegaEvolutionFlair = styled(BaseFlair)`\r\n    --flair-color: transparent;\r\n    --flair-shadow: transparent;\r\n    --mega-evo-gradient: linear-gradient(to right, #bac24e, #4bb84b, #48b4b6, #db58dd);\r\n\r\n    position: relative;\r\n    z-index: 0;\r\n    background-image: var(--mega-evo-gradient);\r\n    \r\n    /* Emulating a box shadow but with a background image */\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n\r\n        /* Creates the sort of box shadow effect I like */\r\n        /* Somehow... */\r\n        opacity: 50%;\r\n        background-image: var(--mega-evo-gradient);\r\n        border-radius: 100px;\r\n\r\n        z-index: -1;\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\n// Gender\r\n\r\nconst GenderColors: any = {\r\n    \"male\": \"var(--male-stat-background)\",\r\n    \"female\": \"var(--female-stat-background)\"\r\n}\r\n\r\nexport const GenderLabel = styled.div<{\r\n    gender: string\r\n}>`\r\n    flex-grow: 1;\r\n    width: 40%;\r\n    height: 84px;\r\n    display: flex;\r\n    border-radius: var(--mini-divison-radius);\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({gender}) => GenderColors[gender] ?? \"var(--layer-1)\"};\r\n    box-shadow: 1px 2px 0px 0px var(--shadow-color);\r\n    margin: 5px;\r\n    /* oH BUt ThiS iS BaD PraCTIcE */\r\n    /* I JUST WANT THEM TO AL */\r\n    & > h1 {\r\n        width: auto;\r\n        margin: 0ch 0.5ch;\r\n    }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\n// InfoStat\r\n\r\nexport const InfoStatParent = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: var(--layer-1);\r\n    box-shadow: 1px 1px 1px var(--shadow-color);\r\n    border-radius: var(--mini-divison-radius);\r\n    padding: 10px 0;\r\n    margin: 5px;\r\n    text-align: left;\r\n`\r\n\r\nexport const InfoStatIcon = styled.div`\r\n    background-color: var(--layer-2);\r\n    border-radius: var(--mini-divison-radius);\r\n    box-shadow: 1px 1px 1px var(--shadow-color);\r\n    /* flexbox abuse 😳 */\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    width: 15px;\r\n    padding: 15px;\r\n    margin: 0px 1ch;\r\n`\r\n","import styled, { css } from \"styled-components\"\r\n\r\n// Labels\r\n\r\nexport const Label = css`\r\n    border-bottom: solid 2px transparent;\r\n    border-image: radial-gradient(currentColor 20%, transparent 100%);\r\n    border-image-slice: 1;\r\n    margin: 10px auto;\r\n    padding: 0.25ch 1ch;\r\n    width: fit-content;\r\n`\r\nexport const Label0 = styled.span`\r\n    ${Label}\r\n`\r\n\r\nexport const Label1 = styled.h1`\r\n    ${Label}\r\n`\r\n\r\nexport const Label2 = styled.h2`\r\n    ${Label}\r\n`\r\n\r\nexport const Label3 = styled.h3`\r\n    ${Label}\r\n`\r\n\r\nexport const NameLabel = styled.h1`\r\n    ${Label}\r\n    font-size: 30pt;\r\n    @media (max-width: 720px) {\r\n        font-size: 25pt;\r\n    }\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const EvolutionsGrid = styled.div`\r\n    background-color: var(--layer-0);\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(275px, 2fr));\r\n    grid-auto-rows: 150px;\r\n    justify-content: center;\r\n\r\n    gap: 10px;\r\n    padding: 5px;\r\n    margin: 10px;\r\n    border: 2px solid var(--layer-1);\r\n    overflow: auto;\r\n    max-height: 480px;\r\n    height: 520px;\r\n\r\n    &::-webkit-scrollbar {\r\n        width: 0.7em;\r\n    }\r\n\r\n    @media (max-width: 720px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n","import styled, { css } from \"styled-components\"\r\n\r\n// Stat bars\r\n\r\nconst StatColors: any = {\r\n    \"hp\": css`\r\n        --primary: hsl(3, 81%, 25%);\r\n        --secondary: hsl(3, 79%, 35%);\r\n        --shadow: hsl(3, 100%, 11%);\r\n        --tertiary: hsl(3, 100%, 14%); \r\n    `,\r\n    \"attack\": css`\r\n        --primary: hsl(22, 84%, 33%);\r\n        --secondary: hsl(22, 93%, 44%);\r\n        --shadow: hsl(22, 75%, 15%);\r\n        --tertiary: hsl(22, 75%, 20%); \r\n    `,\r\n    \"defense\": css`\r\n        --primary: hsl(50, 88%, 35%);\r\n        --secondary: hsl(50, 88%, 43%);\r\n        --shadow: hsl(50, 100%, 24%);\r\n        --tertiary: hsl(50, 80%, 18%); \r\n    `,\r\n    \"special-attack\": css`\r\n        --primary: hsl(222, 70%, 26%);\r\n        --secondary: hsl(222, 59%, 48%);\r\n        --shadow: hsl(222, 70%, 10%);\r\n        --tertiary: hsl(222, 70%, 14%); \r\n    `,\r\n    \"special-defense\": css`\r\n        --primary: hsl(115, 80%, 23%);\r\n        --secondary: hsl(115, 75%, 34%);\r\n        --shadow: hsl(115, 75%, 10%);\r\n        --tertiary: hsl(115, 84%, 12%); \r\n    `,\r\n    \"speed\": css`\r\n        --primary: hsl(330, 91%, 26%);\r\n        --secondary: hsl(330, 91%, 43%);\r\n        --shadow: hsl(330, 77%, 18%);\r\n        --tertiary: hsl(330, 91%, 14%); \r\n    `,\r\n    \"total\": css`\r\n        --primary: hsl(0, 0%, 20%);\r\n        --secondary: hsl(0, 0%, 43%);\r\n        --shadow: hsl(0, 0%, 0%);\r\n        --tertiary: hsl(0, 0%, 10%);\r\n    `,\r\n}\r\n\r\nexport const StatCmp = styled.div<{\r\n    name: string\r\n}>`\r\n    ${({name}) => StatColors[name] ?? StatColors[\"total\"]}\r\n    --stat-radius: 15px;\r\n    box-shadow: 2px 2px 1px 0px var(--shadow);\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: var(--tertiary);\r\n    height: 2.5em;\r\n    border-radius: var(--stat-radius);\r\n    margin: 5px;\r\n`\r\n\r\nexport const StatBarContainer = styled.div`\r\n    background-color: transparent;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 2px solid var(--layer-0); */\r\n    border: 2px solid var(--primary);\r\n    border-radius: 0 var(--stat-radius) var(--stat-radius) 0;\r\n`\r\n\r\nexport const StatBar = styled.div<{\r\n    outOf: number\r\n    stat: number\r\n}>`\r\n    display: flex;\r\n    align-items: center;\r\n    transition: 0.25s ease;\r\n    width: calc(100% * (${({stat}) => stat}/${({outOf}) => outOf}));\r\n    height: 100%;\r\n    padding: 0 0 0 0.5ch;\r\n    margin: 0;\r\n    border-radius: 0 var(--stat-radius) var(--stat-radius) 0;\r\n    /* box-shadow: 2px 0 1px 0px var(--shadow); */\r\n    background-color: var(--secondary);\r\n`\r\n\r\nexport const StatValue = styled.div`\r\n    background-color: transparent;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 2px solid var(--layer-0); */\r\n    border: 2px solid var(--primary);\r\n    border-radius: 0 var(--stat-radius) var(--stat-radius) 0;\r\n`\r\n\r\nexport const StatName = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 25ch;\r\n    padding: 0 1ch;\r\n    background-color: var(--primary);\r\n    border-radius: var(--stat-radius) 0 0 var(--stat-radius);\r\n    box-shadow: 1px 0 4px var(--shadow);\r\n    z-index: 1;\r\n    border-right-width: 0px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\n// Type\r\nexport const Type = styled.h1`\r\n    display: inline-block;\r\n    background-color: currentColor;\r\n    text-shadow: 2px 2px 1px var(--shadow-color);\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n    margin: 5px;\r\n    width: 8ch;\r\n`\r\n\r\nexport const EmptyType = styled(Type)`\r\n    background-color: transparent;\r\n    box-shadow: 0 0 10px inset white;\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const PokedexDesc = styled.p`\r\n    margin: 1ch 1ch;\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovesGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    height: 500px;\r\n    overflow: auto;\r\n    background-color: var(--layer-0);\r\n`\r\n\r\nexport const Move = styled.div`\r\n    background-color: var(--layer-1);\r\n    margin: 5px;\r\n    box-shadow: 3px 3px 0px var(--shadow-color);\r\n    border-radius: 10px;\r\n    padding: 0 10px;\r\n`\r\n\r\nexport const MoveType = styled.div`\r\n    display: flex;\r\n    justify-items: flex-start;\r\n`\r\n","import { IAbility } from \"pokeapi-typescript\"\r\nimport React from \"react\"\r\nimport { AbilityDesc, AbilityDiv, AbilityName, Label2 } from \"..\"\r\nimport { capitalize } from \"../../../util/util\"\r\n\r\nexport function Ability(props: {\r\n    ability: IAbility\r\n})\r\n{\r\n    const abilityData = props.ability.effect_entries.filter((e) => e.language.name === \"en\")[0]\r\n    return (\r\n        <AbilityDiv>\r\n            <AbilityName>\r\n                <Label2>{capitalize(props.ability.name).replace(\"-\", \" \")}</Label2>\r\n            </AbilityName>\r\n            <AbilityDesc>\r\n                <p>\r\n                    {abilityData?.short_effect ?? \"[NO DESCRIPTION]\" }\r\n                </p>\r\n            </AbilityDesc>\r\n        </AbilityDiv>\r\n    )\r\n}\r\n","import './index.css'\r\n\r\n// Loading spinner by https://loading.io/css/\r\n\r\nexport default function LoadingSpinner(props: {\r\n    visible: boolean\r\n})\r\n{\r\n    return (\r\n        <div className=\"lds-ring\" style={{\r\n            display: props.visible?\"inline-block\":\"none\"\r\n        }}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n","import { IPokemon, IPokemonSpecies, IEvolutionChain, INamedApiResourceList, IAbility, IMove } from \"pokeapi-typescript\"\r\n\r\ntype s =\r\n    IPokemon |\r\n    IPokemonSpecies |\r\n    IEvolutionChain |\r\n    IAbility |\r\n    IMove\r\n\r\nexport const APICache: Record<string, Promise<any>> = {}\r\nexport let PokeList: INamedApiResourceList<IPokemon>|null = null\r\n\r\nconst indexListFetchJob =\r\n    (async function(){\r\n        PokeList = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=9999\")\r\n                    .then(blob => blob.json())\r\n    })()\r\n\r\nexport const API_ENDPOINT = \"https://pokeapi.co/api/v2\"\r\nexport const POKEMON_ENDPOINT = API_ENDPOINT+\"/pokemon/\"\r\nexport const SPECIES_ENDPOINT = API_ENDPOINT+\"/pokemon-species/\"\r\nexport const EVOTREE_ENDPOINT = API_ENDPOINT+\"/evolution/\"\r\n\r\nexport async function getPkmnByURL<T extends s>(query: string): Promise<T>\r\n{\r\n    return APICache[query] ?? (APICache[query] = fetch(query).then(blob => blob.json()))\r\n}\r\n\r\nexport async function getPkmnByEndpoint<T extends s>(endpoint: string, param: string): Promise<T>\r\n{\r\n    const query = `${API_ENDPOINT}/${endpoint}/${param}/`\r\n    return APICache[query] ?? (APICache[query] = fetch(query).then(blob => blob.json()))\r\n}\r\n\r\nexport async function MatchQuery(query: string, limit = -1)\r\n{\r\n    await indexListFetchJob // Wait until the index list is ready\r\n    let results = PokeList!.results.filter((i) => i.name.match(query) !== null)\r\n    if (limit > 0)\r\n    {\r\n        results = results.slice(0, limit)\r\n    }\r\n    return results\r\n}\r\n","import { IChainLink, IEvolutionChain, IPokemon, IPokemonSpecies } from \"pokeapi-typescript\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport LoadingSpinner from \"../../../loadingSpinner\"\r\nimport SearchResult from \"../../../searchResult\"\r\nimport { getPkmnByURL } from \"../../../util/PokeAPICache\"\r\nimport { EvolutionsGrid } from \"..\"\r\nimport PokemonContext from \"../../pokemonContext\"\r\n\r\nexport function Evolutions(props: {})\r\n{\r\n    const [pokemonList, setPokemonList] = useState<IPokemon[]|null>(null)\r\n    const { pokemon, species } = useContext(PokemonContext)\r\n\r\n    // componentDidMount\r\n    useEffect(() => {\r\n        getPkmnByURL<IEvolutionChain>(species.evolution_chain.url)\r\n            .then(result => unwrapChain(result)) // vv Push default variants to the top of the list\r\n            .then(pokemons => setPokemonList(pokemons.sort((a, b) => Number(b.is_default) - Number(a.is_default))))\r\n    }, [species.evolution_chain.url])\r\n\r\n    return (\r\n        <EvolutionsGrid>\r\n            {pokemonList?.map((pkmn) => \r\n                <SearchResult\r\n                pokemon={pkmn}\r\n                disabled={pokemon.name === pkmn.name}\r\n                key={pkmn.name}/>)\r\n                ?? <LoadingSpinner visible />}\r\n        </EvolutionsGrid>\r\n    )\r\n}\r\n\r\nasync function unwrapChain(evoChain: IEvolutionChain)\r\n{\r\n    // Edge case where the chain is empty\r\n    if (evoChain.chain == null) // null and undefined are same with loose equality\r\n        return []\r\n    \r\n    // each species named url\r\n    let urls: string[] = []\r\n    // stack of evolves_to properties\r\n    let evoStack: IChainLink[] = []\r\n\r\n    // push the first evolution onto the stack\r\n    evoStack.push(evoChain.chain)\r\n    // while the stack isnt empty\r\n    while (evoStack.length !== 0)\r\n    {\r\n        // pop the first evolution off the evo stack\r\n        const item = evoStack.pop()\r\n        // push the evolution's species data into result\r\n        urls.push(item!.species.url)\r\n        // push all evolutions to the stack\r\n        evoStack.push(...item!.evolves_to)\r\n    }\r\n\r\n    // Fetch all the pokemon species data\r\n    const speciesEntries = await Promise.all(urls.map(url => getPkmnByURL<IPokemonSpecies>(url)))\r\n\r\n    // *external screaming*\r\n    // Fetch all the pokemon data\r\n    const pokemonPromise = Promise.all(\r\n        speciesEntries.map( // Each species has an array of varieties\r\n            entry => entry.varieties.map(v => getPkmnByURL<IPokemon>(v.pokemon.url)) // Fetch each variety in the species\r\n            ).flat()) // Flatten the array\r\n\r\n    // Return the resulting pokemons\r\n    return await pokemonPromise\r\n}\r\n","import React from \"react\"\r\nimport { GenderLabel } from \"..\"\r\n\r\nexport function Gender(props: {\r\n    gender?: \"male\" | \"female\"\r\n    ratio?: number\r\n    children?: React.ReactNode \r\n})\r\n{\r\n    const genderMap: any = {\r\n        \"male\": <i className=\"fas fa-mars\"></i>,\r\n        \"female\": <i className=\"fas fa-venus\"></i>\r\n    }\r\n    return (\r\n        <GenderLabel gender={props.gender ?? \"\"}>\r\n            <h1>{genderMap[props.gender ?? \"\"] ?? \"Genderless\"}</h1><h1>{props.ratio}{props.gender && \"%\"}</h1>\r\n        </GenderLabel>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { InfoStatIcon, InfoStatParent } from \"..\";\r\n\r\nexport function InfoStat(props: {\r\n    icoName: string,\r\n    children: React.ReactNode\r\n})\r\n{\r\n    return (\r\n        <InfoStatParent>\r\n            <InfoStatIcon>\r\n                <i className={props.icoName}></i>\r\n            </InfoStatIcon> <span>{props.children}</span>\r\n        </InfoStatParent>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { StatBar, StatBarContainer, StatCmp, StatName } from \"..\";\r\nimport { capitalize } from \"../../../util/util\";\r\n\r\nexport function Stat(props: {\r\n    name: string\r\n    outOf: number\r\n    stat: number\r\n})\r\n{\r\n    return (\r\n        <StatCmp name={props.name}>\r\n            <StatName>\r\n                {props.name.split(\"-\").map(e => capitalize(e)).join(\" \")}\r\n            </StatName>\r\n            <StatBarContainer>\r\n                <StatBar stat={props.stat} outOf={props.outOf}>\r\n                    {props.stat}/{props.outOf}\r\n                </StatBar>\r\n            </StatBarContainer>\r\n        </StatCmp>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { EmptyType, Type } from \"..\"\r\nimport { capitalize } from \"../../../util/util\"\r\n\r\n\r\nexport function TypeLabel(props: {\r\n    typeName: string | null\r\n})\r\n{\r\n    if (props.typeName == null)\r\n        return <EmptyType><span><pre style={{padding: \"0\", margin: \"0\"}}>   </pre></span></EmptyType>\r\n    else\r\n        return <Type className={props.typeName}><span>{capitalize(props.typeName)}</span></Type>\r\n}\r\n","import { IMove } from \"pokeapi-typescript\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { MovesGrid, Stat, TypeLabel } from \"..\";\r\nimport LoadingSpinner from \"../../../loadingSpinner\";\r\nimport { getPkmnByURL } from \"../../../util/PokeAPICache\";\r\nimport { capitalize } from \"../../../util/util\";\r\nimport pokemonContext from \"../../pokemonContext\";\r\nimport { Label1, Label2 } from \"../styleComponents/label\";\r\nimport { Move } from \"../styleComponents/moves\";\r\n\r\nexport function Moves(props: {})\r\n{\r\n    const [moves, setMoves] = useState<IMove[]|null>(null)\r\n    const { pokemon } = useContext(pokemonContext)\r\n    \r\n    // onPokemonUpdate\r\n    useEffect(() => {\r\n        // Grab all of the pokemon's moves\r\n        Promise.all(\r\n            pokemon.moves\r\n                .filter(e => e.version_group_details.reverse()[0].move_learn_method.name === \"level-up\")\r\n                .map(e => getPkmnByURL<IMove>(e.move.url))\r\n        ).then(result => setMoves(result))\r\n    }, [pokemon])\r\n\r\n    return (\r\n        <MovesGrid>\r\n            {moves?.map(move => {\r\n                let details = pokemon.moves.find(e => e.move.name === move.name)?.version_group_details\r\n                let latest = details?.sort((a, b) => parseInt(a.version_group.url.split(\"/\")[1]) - parseInt(b.version_group.url.split(\"/\")[1]))[0]\r\n                return {\r\n                    ...move,\r\n                    lv: latest?.level_learned_at ?? 420\r\n                }\r\n            })\r\n                .sort((a, b) => a.lv - b.lv)\r\n                .map(move => (\r\n                <Move key={move.id}>\r\n                    <Label1>\r\n                        {move.name.split(\"-\").map(e => capitalize(e)).join(\" \")} |\r\n                        Lv{move.lv}\r\n                    </Label1>\r\n                    <Label2>Type</Label2>\r\n                    <div>\r\n                        <TypeLabel typeName={move.type.name}></TypeLabel>\r\n                    </div>\r\n                    <Label2>Stats</Label2>\r\n                    <Stat name=\"Power\" outOf={255} stat={move.power ?? 0} />\r\n                    <Stat name=\"Accuracy\" outOf={100} stat={move.accuracy ?? 0} />\r\n                    <Label2 style={{textAlign: \"left\"}}>Description</Label2>\r\n                    <p>\r\n                        {\r\n                            // Get the move's latest english entry\r\n                            move.effect_entries\r\n                            .filter(i => i.language.name === \"en\")\r\n                            .reverse()[0]\r\n                            .short_effect\r\n                            // Replace effect chance placeholder with the effect chance\r\n                            .replaceAll(\"$effect_chance%\", `${move.effect_chance}%`)\r\n                        }\r\n                    </p>\r\n                </Move>\r\n            )) ?? <LoadingSpinner visible />}\r\n        </MovesGrid>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState, useRef } from 'react'\r\n\r\nimport '../typeColorClasses/typeColorClasses.css'\r\n\r\nimport CopyClicker from '../copyClicker'\r\nimport PokemonContext from \"./pokemonContext\"\r\nimport {\r\n    Stat,\r\n    Label1,\r\n    Label2,\r\n    NameLabel,\r\n    Division,\r\n    EvenDivision,\r\n    TypeLabel,\r\n    StatDiv,\r\n    Gender,\r\n    ResultDetailedGrid,\r\n    InfoStat,\r\n    Ability,\r\n    AbilityContainer,\r\n    Evolutions,\r\n    PokedexDesc,\r\n    Moves,\r\n    GigantamaxFlair,\r\n    LegendaryFlair,\r\n    MythicalFlair,\r\n    MegaEvolutionFlair,\r\n    AlternativeFormFlair,\r\n    EternamaxFlair\r\n} from \"./components\"\r\n\r\nimport { capitalize, isStringPositiveInteger, stylePokemonName } from '../util/util'\r\nimport { getPkmnByEndpoint, getPkmnByURL } from '../util/PokeAPICache'\r\nimport {\r\n    IPokemon,\r\n    IPokemonSpecies,\r\n    IAbility\r\n} from \"pokeapi-typescript\"\r\nimport { useHistory, useParams } from 'react-router'\r\nimport LoadingSpinner from '../loadingSpinner'\r\n\r\nconst NO_IMAGE = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/399.png\"\r\n\r\nfunction ResultDetailed(props: {})\r\n{\r\n    const [pokemon, setPokemon] = useState({} as IPokemon)\r\n    const [species, setSpecies] = useState({} as IPokemonSpecies)\r\n    const history = useHistory()\r\n    const params = useParams<{id:string, name:string}>()\r\n    const [ready, setReady] = useState(false)\r\n\r\n    const self = useRef<HTMLDivElement>(null)\r\n\r\n    // onURLChanged\r\n    useEffect(() => {\r\n        self.current?.scrollIntoView()\r\n        if (!isStringPositiveInteger(params.id))\r\n        {\r\n            history.push(\"/\")\r\n            return\r\n        }\r\n        getPkmnByEndpoint<IPokemon>(\"pokemon\", params.id)\r\n            .then(pkmn => {\r\n                // correct name in url if incorrect\r\n                if (pkmn.name !== params.name)\r\n                {\r\n                    history.push(`/${pkmn.id}/${pkmn.name}`)\r\n                    return\r\n                }\r\n                getPkmnByURL<IPokemonSpecies>(pkmn.species.url)\r\n                    .then(spec => {\r\n                        setPokemon(pkmn)\r\n                        setSpecies(spec)\r\n                        setReady(true)\r\n                    })\r\n            })\r\n            .catch(_ => history.push(\"/\"))\r\n    }, [params, history])\r\n\r\n    if (!ready)\r\n        return <LoadingSpinner visible />\r\n\r\n    const type0 = pokemon.types[0].type.name\r\n    const type1 = pokemon.types[1]?.type.name\r\n\r\n    let eggGroupText = species.egg_groups\r\n                                    .map(\r\n                                        (e) => capitalize(e.name === \"no-eggs\" ? \"undiscovered\" : e.name)\r\n                                    ) // Map out the egg groups the pokemon is in\r\n    if (!eggGroupText.join(\"\")) // Check if there are no egg groups (failsafe)\r\n        eggGroupText = [\"N/A\"]\r\n\r\n    const latestFlavorText = species.flavor_text_entries\r\n        .filter((e) => e.language.name === \"en\")   // get all english entries\r\n        .reverse()[0]                              // Get the last element\r\n        .flavor_text.replaceAll(\"\\u000C\", ' ')     // Remove weird char that exists in some entries\r\n        .replaceAll(/(\\r\\n|\\n|\\r)/gm,\" \")          // Remove newline chars\r\n\r\n    const genderRatio = species.gender_rate\r\n\r\n    const femaleRatio = genderRatio/8 * 100 // gender is stored in eighths\r\n    const maleRatio = 100 - femaleRatio // Get male ratio\r\n\r\n    // Get the latest flavor text\r\n    return (\r\n        <ResultDetailedGrid ref={self}>\r\n            <PokemonContext.Provider value={{\r\n                pokemon: pokemon,\r\n                species: species\r\n            }}>\r\n\r\n                {/* [ROW 1] */}\r\n\r\n                {/* Pokemon name, Portrait, Flairs, Type */}\r\n                <EvenDivision width={4} height={1}>\r\n                    <NameLabel className={type0}>\r\n                        {stylePokemonName(pokemon.name)}\r\n                    </NameLabel>\r\n                    <div>\r\n                        <img\r\n                        className='pokeimg'\r\n                        // other.official-artwork not in interface for some reason\r\n                        src={ (pokemon.sprites as any).other[\"official-artwork\"].front_default ??\r\n                        pokemon.sprites.front_default ??\r\n                        NO_IMAGE }\r\n                        alt={pokemon.name} />\r\n                    </div>\r\n                    <div>\r\n                        <PkmnFlairs />\r\n                        <TypeLabel typeName={type0} key={type0}></TypeLabel>\r\n                        <TypeLabel typeName={type1} key={type1}></TypeLabel>\r\n                    </div>\r\n                </EvenDivision>\r\n\r\n                {/* Stats, Gender Ratio */}\r\n                <EvenDivision width={4} height={1}>\r\n                    <Label1>Base Stats</Label1>\r\n                    <StatDiv>\r\n                        {\r\n                        pokemon.stats.map(({stat:{name}, base_stat}) =>\r\n                            <Stat\r\n                                name={name}\r\n                                stat={base_stat}\r\n                                outOf={255}\r\n                                key={name} />\r\n                        )\r\n                        }\r\n                        <Stat\r\n                            name={\"total\"}\r\n                            stat={pokemon.stats.map(({base_stat}) => base_stat).reduce((n, c) => n + c)}\r\n                            outOf={1125} />\r\n                    </StatDiv>\r\n                    <Label1>Gender Rarity</Label1>\r\n                    <StatDiv>\r\n                        {genderRatio !== -1 ?\r\n                        <>\r\n                            <Gender gender=\"male\" ratio={maleRatio}/>\r\n                            <Gender gender=\"female\" ratio={femaleRatio}/>\r\n                        </> :\r\n                            <Gender />\r\n                        }\r\n                    </StatDiv>\r\n                </EvenDivision>\r\n\r\n                {/* [ROW 2] */}\r\n\r\n                <EvenDivision width={5} height={2}>\r\n                    <Label1>Evolutions/Variants</Label1>\r\n                    <Evolutions />\r\n                </EvenDivision>\r\n\r\n                <EvenDivision width={3} height={1}>\r\n                    <Label2>Pokemon Info</Label2>\r\n                    <InfoStat icoName=\"fas fa-hashtag\">\r\n                        ID {\r\n                            pokemon.id < 10_000 ?\r\n                            `#${pokemon.id}` :\r\n                            \"N/A\"\r\n                        }\r\n                    </InfoStat>\r\n                    <InfoStat icoName=\"fas fa-weight-hanging\">\r\n                        Weight: {pokemon.weight/10}kg\r\n                    </InfoStat>\r\n                    <InfoStat icoName=\"fas fa-ruler-vertical\">\r\n                        Height: {pokemon.height*10}cm\r\n                    </InfoStat>\r\n                    <InfoStat icoName=\"fas fa-tree\">\r\n                        Likes {species.habitat?.name ?? \"no\"} environments\r\n                    </InfoStat>\r\n                    <InfoStat icoName=\"fas fa-egg\">\r\n                        Egg groups: {eggGroupText.join(\", \")}\r\n                    </InfoStat>\r\n                </EvenDivision>\r\n\r\n                <EvenDivision width={3} height={1}>\r\n                    <Label2>Pokedex Desc.</Label2>\r\n                    <PokedexDesc>{latestFlavorText}</PokedexDesc>\r\n                </EvenDivision>\r\n\r\n                <Division width={5} height={1}>\r\n                    <Label1>Leveling Moves</Label1>\r\n                    <Moves />\r\n                </Division>\r\n\r\n                <Division width={3} height={1}>\r\n                    <Label1>Abilities</Label1>\r\n                    <Abilities />\r\n                </Division>\r\n\r\n                {/* [ROW 4] */}\r\n\r\n                <Division width={8} height={1}>\r\n                    <p>Share this Pokemon <span className=\"--bigify\"><i className=\"fas fa-share\"></i></span> <br />\r\n                        <CopyClicker copyTxt={window.location.href.split('?')[0]} />\r\n                    </p>\r\n                </Division>\r\n            </PokemonContext.Provider>\r\n        </ResultDetailedGrid>\r\n    )\r\n}\r\n\r\n\r\n// Element that displays any special attributes the pokemon has (legendary, mega evolution, etc...)\r\nfunction PkmnFlairs(props: {})\r\n{\r\n    const { pokemon, species } = useContext(PokemonContext)\r\n    const looseSpecies = species as any\r\n    let splitName = pokemon.name.split(\"-\")\r\n\r\n    // Generate the flairs for the pokemon\r\n    let flairs: JSX.Element[] = []\r\n    let couldBeAlternate = true\r\n    if (looseSpecies.is_legendary)\r\n    {\r\n        flairs.push(<LegendaryFlair key=\"legendary\">Legendary Pokemon</LegendaryFlair> )\r\n    }\r\n    if (looseSpecies.is_mythical)\r\n    {\r\n        flairs.push(<MythicalFlair key=\"mythical\">Mythical Pokemon</MythicalFlair>)\r\n    }\r\n    if (splitName.some((e) => e === \"mega\"))\r\n    {\r\n        couldBeAlternate = false\r\n        flairs.push(<MegaEvolutionFlair key=\"mega\">Mega Evolution</MegaEvolutionFlair>)\r\n    }\r\n    if (splitName.some((e) => e === \"gmax\"))\r\n    {\r\n        couldBeAlternate = false\r\n        flairs.push(<GigantamaxFlair key=\"giga\">Gigantamax Form</GigantamaxFlair>)\r\n    }\r\n    if (splitName.some((e) => e === \"eternamax\"))\r\n    {\r\n        couldBeAlternate = false\r\n        flairs.push(<EternamaxFlair key=\"giga\">Eternamax Form</EternamaxFlair>)\r\n    }\r\n    if (!pokemon.is_default && couldBeAlternate)\r\n    {\r\n        flairs.push(<AlternativeFormFlair key=\"alt\">Alternative Form</AlternativeFormFlair>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {flairs}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Abilities(props: {})\r\n{\r\n    const { pokemon } = useContext(PokemonContext)\r\n\r\n    const [abilities, setAbilities] = useState<IAbility[]|null>(null)\r\n\r\n    useEffect(() => {\r\n        Promise.all(pokemon.abilities.map((e) => getPkmnByURL<IAbility>(e.ability.url)))\r\n            .then(result => setAbilities(result))\r\n    }, [pokemon])\r\n\r\n    return (\r\n        <AbilityContainer>\r\n            {\r\n                abilities?.map((ability) => <Ability ability={ability} key={ability.id}/>) ?? <LoadingSpinner visible />\r\n            }\r\n        </AbilityContainer>\r\n    )\r\n}\r\n\r\nexport default ResultDetailed\r\n","import ResultDetailed from \"./resultDetailed\"\r\n\r\nexport default ResultDetailed\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport SearchBox from './components/searchBox'\r\nimport SearchResult from './components/searchResult'\r\nimport ResultDetailed from './components/resultDetailed'\r\nimport { HashRouter as Router, Redirect, Route, Switch, useHistory, useParams } from \"react-router-dom\"\r\nimport './App.css'\r\nimport { escapeRegExp } from './components/util/util'\r\nimport { IPokemon, IPokemonSpecies } from \"pokeapi-typescript\"\r\nimport { getPkmnByURL, MatchQuery } from \"./components/util/PokeAPICache\"\r\nimport LoadingSpinner from './components/loadingSpinner'\r\n\r\nfunction App(props: {})\r\n{\r\n    return (\r\n        <Router>\r\n            <RealApp />\r\n        </Router>\r\n    )\r\n}\r\n\r\nfunction RealApp()\r\n{\r\n    const queryIndex = useRef(0)\r\n\r\n    const [searchResults, setSearchResults] = useState<JSX.Element[]>([])\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    \r\n    const queryPokeAPI = (query: string) => {\r\n        setLoading(true)\r\n        history.push(\"/\")\r\n\r\n        queryIndex.current += 1\r\n        let thisQueryIndex = queryIndex.current\r\n\r\n        query = escapeRegExp(query.toLowerCase().replaceAll(\" \", \"-\").replaceAll(/:|\\.|'/g, ''))\r\n        if (query === \"\") // If no query...\r\n        {\r\n            setSearchResults([])\r\n            setLoading(false)\r\n            return\r\n        }\r\n        \r\n        // query pokeapi for the pokemon\r\n        MatchQuery(query, 30)\r\n            // accumulate all the matches then fetch the pokemon\r\n            .then(results => Promise.all(results.map(i => getPkmnByURL<IPokemon>(i.url))))\r\n            .then((pokemon) => {\r\n                pokemon.forEach(p => getPkmnByURL<IPokemonSpecies>(p.species.url))\r\n                // Fix pop animations\r\n                // if this is an earlier query, abort\r\n                if (thisQueryIndex < queryIndex.current)\r\n                    return\r\n                setSearchResults([])\r\n                // Map the search results into <SearchResult /> components and then display them\r\n                setSearchResults(pokemon.map(p =>\r\n                    <SearchResult pokemon={p} key={p.name} />))\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.classList.add(\"dark\")\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"search\">\r\n                <div className=\"loading-container\">\r\n                    <LoadingSpinner visible={loading}/>\r\n                </div>\r\n                <SearchBox keyUp={queryPokeAPI} />\r\n                <Switch>\r\n                    <Route path=\"/:id/:name/\" exact>\r\n                        <div className=\"search__result-detailed-container\">\r\n                            <ResultDetailed />\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/:name/\" exact>\r\n                        <WackyRedirect />\r\n                        <div className=\"search__result-detailed-container\">\r\n                            <LoadingSpinner visible/>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <div className=\"search__result-container\">\r\n                            {searchResults}\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction WackyRedirect()\r\n{\r\n    const params = useParams<{name:string}>()\r\n    const history = useHistory()\r\n    const [id, setId] = useState<number|null>(null)\r\n\r\n    useEffect(() => {\r\n        MatchQuery(params.name)\r\n            .then(result => {\r\n                const foundResult = result.find(e => e.name === params.name)\r\n                if (foundResult === undefined)\r\n                {\r\n                    history.push(\"/\")\r\n                    return\r\n                }\r\n                setId(parseInt(foundResult!.url.split(\"/\").slice(-2)[0]))\r\n            })\r\n    }, [params, history])\r\n\r\n    if (id == null)\r\n        return null\r\n\r\n    return <Redirect to={`/${id}/${params.name}/`}/>\r\n}\r\n//\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Navbar = styled.nav`\r\n    background: var(--layer-1);\r\n    text-align: center;\r\n    border-bottom: solid var(--layer-3) 2px;\r\n    box-shadow: 0 1px 2px var(--shadow-color);\r\n    padding: 18px 0;\r\n`\r\n\r\nexport const NavbarLink = styled.a`\r\n    position: relative;\r\n    color: var(--link-color);\r\n    font-size: 23pt;\r\n    padding: 0px 10px;\r\n    text-decoration: none;\r\n    transition: all 0.10s;\r\n    &:hover {\r\n        color: var(--link-hover);\r\n    }\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        left: 0;\r\n        bottom: 0;\r\n        border-bottom: solid var(--link-hover) 2px;\r\n        border-radius: 20px;\r\n        /* NEGATIVE PADDING!?!?!?? */\r\n        margin: -0.3ch 0px;\r\n        background-color: transparent;\r\n        transition: all 0.30s ease;\r\n        transform: scaleX(0);\r\n    }\r\n    &:hover::before {\r\n        transform:scaleX(1);\r\n    }\r\n    @media (max-width: 1080px) {\r\n        font-size: 18pt;\r\n        padding: 0 2px;\r\n    }\r\n`\r\n\r\nexport const NavbarUList = styled.ul`\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n    flex-flow: wrap row;\r\n`\r\n\r\nexport const NavbarListItem = styled.li`\r\n    margin: 0 10px;\r\n`\r\n\r\nexport const MiniNavbar = styled(Navbar)`\r\n    & ${NavbarLink} {\r\n        padding: 0;\r\n        font-size: 20px;\r\n        background-color: transparent;\r\n    }\r\n    & ${NavbarUList} {\r\n        flex-flow: wrap row;\r\n    }\r\n    & ${NavbarListItem} {\r\n        margin: 0 10px;\r\n    }\r\n    border: 0;\r\n    padding: 10px 20px;\r\n    background-color: transparent;\r\n    box-shadow: none;\r\n`\r\n","import React from \"react\";\r\nimport './index.css'\r\nimport '../navbar/navbar.css'\r\nimport { MiniNavbar, NavbarLink, NavbarListItem, NavbarUList } from \"../navbar\"\r\n\r\nfunction Footer()\r\n{\r\n    return (\r\n        <footer>\r\n            <p className=\"footer__content\">\r\n                <i className=\"far fa-copyright\"></i> copyright 2021 lolololol\r\n            </p>\r\n            <p className=\"footer__content\">\r\n                A <a className=\"--animated-underline\" href=\"https://github.com/seamussmith\">Seamus Smith</a> website powered by PokeAPI.\r\n            </p>\r\n            <MiniNavbar>\r\n                <NavbarUList>\r\n                    <NavbarListItem>\r\n                        <NavbarLink href=\"https://github.com/seamussmith/poke-searcher-react\">\r\n                        <i className=\"fab fa-github --force-inheritence\"></i> github</NavbarLink>\r\n                    </NavbarListItem>\r\n                    <NavbarListItem>\r\n                        <NavbarLink href=\"https://www.youtube.com/watch?v=G4z9yW72A1o\">\r\n                        <i className=\"fas fa-angry --force-inheritence\"></i> get rickrolled</NavbarLink>\r\n                    </NavbarListItem>\r\n                    <NavbarListItem>\r\n                        <NavbarLink href=\"https://pokeapi.co/\">\r\n                        <i className=\"fas fa-server --force-inheritence\"></i> PokeAPI</NavbarLink>\r\n                    </NavbarListItem>\r\n                </NavbarUList>\r\n            </MiniNavbar>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport Footer from './components/footer'\r\n\r\nasync function main()\r\n{\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App/>\r\n            <Footer />\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\nmain()\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}